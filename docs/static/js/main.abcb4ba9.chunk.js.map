{"version":3,"sources":["Profile.js","News.js","Home.js","LoginContext.js","Login.js","LoginButton.js","Navigation.js","NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Profile","props","react_default","a","createElement","Loading","News","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","news","isLoading","_this2","setState","setTimeout","_this$state","arr","map","item","className","React","Component","Home","LoginContext","createContext","loggedIn","username","logOut","logIn","setUsername","Login","password","error","onChange","bind","assertThisInitialized","onSubmit","event","name","target","value","defineProperty","toLowerCase","context","history","push","preventDefault","_this$state2","type","contextType","LoginButton","src_LoginContext","Consumer","_ref","style","color","padding","onClick","react_router_dom","textDecoration","to","Navigation","src_LoginButton","NoMatch","App","localStorage","setItem","JSON","stringify","console","log","parse","getItem","Provider","src_Navigation","react_router","path","exact","component","render","src_Profile","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abcb4ba9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <h2>Profile</h2>\r\n      <p>Username: Admin</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./News.css\";\r\n\r\nclass News extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      news: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        news: [\r\n          \"News # 1: All pinguins are doomed\",\r\n          \"News # 2: Bees are doing great!\"\r\n        ],\r\n        isLoading: false\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    let { news, isLoading } = this.state;\r\n    let arr = news.map(item => {\r\n      return <div>{item}</div>;\r\n    });\r\n    return (\r\n      <div className=\"news\">\r\n        <h2>News</h2>\r\n        {isLoading ? <Loading /> : arr}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Loading() {\r\n  return <h2>...Loading</h2>;\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return <h1>This is home page</h1>;\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst LoginContext = React.createContext({\r\n  loggedIn: false,\r\n  username: \"\",\r\n  logOut: () => {},\r\n  logIn: () => {},\r\n  setUsername: () => {}\r\n});\r\n\r\nexport default LoginContext;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport LoginContext from \"./LoginContext\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: \"\", password: \"\", error: \"\" };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n  onSubmit(event) {\r\n    const { username, password } = this.state;\r\n\r\n    setTimeout(() => {\r\n      if (username.toLowerCase() === \"admin\" && password === \"1234\") {\r\n        this.context.logIn();\r\n        this.context.setUsername(username);\r\n        this.props.history.push(\"/profile\");\r\n      } else {\r\n        this.setState({ error: \"Username or password is incorrect.\" });\r\n      }\r\n    }, 1000);\r\n    event.preventDefault();\r\n  }\r\n  render() {\r\n    const { username, password, error } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <h2>Login</h2>\r\n\r\n        <form className=\"login__form\" onSubmit={this.onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"login__input\"\r\n            value={username}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            className=\"login__input\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        {error && <p className=\"login__error\">{error}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.contextType = LoginContext;\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginContext from \"./LoginContext\";\r\n\r\nfunction LoginButton() {\r\n  return (\r\n    <div>\r\n      <LoginContext.Consumer>\r\n        {({ logIn, logOut, loggedIn }) => {\r\n          let style = {\r\n            color: loggedIn ? \"red\" : \"green\",\r\n            padding: \"5px 10px\"\r\n          };\r\n\r\n          return loggedIn ? (\r\n            <button style={style} onClick={logOut}>\r\n              log out\r\n            </button>\r\n          ) : (\r\n            <button style={style}>\r\n              <Link style={{ textDecoration: \"none\" }} to=\"/login\">\r\n                log in\r\n              </Link>\r\n            </button>\r\n          );\r\n        }}\r\n      </LoginContext.Consumer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\nimport LoginButton from \"./LoginButton\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__links\">\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/news\">News</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </li>\r\n      </ul>\r\n      <LoginButton />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./NoMatch.css\";\r\n\r\nfunction NoMatch() {\r\n  return <p className=\"NoMatch\">404 No such page.</p>;\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport News from \"./News\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport LoginContext from \"./LoginContext\";\nimport Navigation from \"./Navigation\";\nimport NoMatch from \"./NoMatch\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logIn = () => {\n      this.setState(state => ({\n        loggedIn: true\n      }));\n      localStorage.setItem(\"loggedIn\", true);\n    };\n\n    this.logOut = () => {\n      this.setState(state => ({\n        loggedIn: false\n      }));\n\n      localStorage.setItem(\"loggedIn\", false);\n      localStorage.setItem(\"username\", \"\");\n    };\n\n    this.setUsername = username => {\n      this.setState(state => ({\n        username\n      }));\n\n      localStorage.setItem(\"username\", JSON.stringify(username));\n      console.log(username);\n    };\n    this.state = {\n      loggedIn: false,\n      logIn: this.logIn,\n      logOut: this.logOut,\n      username: \"\",\n      setUsername: this.setUsername\n    };\n  }\n\n  componentDidMount() {\n    const loggedIn = JSON.parse(localStorage.getItem(\"loggedIn\"));\n    const username = localStorage.getItem(\"username\") || \"\";\n    // console.log(localStorage.getItem(\"username\"), \"username\");\n    // const username = \"\";\n\n    this.setState({ loggedIn, username });\n  }\n\n  render() {\n    const { loggedIn, logIn, logOut, username, setUsername } = this.state;\n    return (\n      <div className=\"App\">\n        <Router>\n          <LoginContext.Provider\n            value={{ loggedIn, logIn, logOut, username, setUsername }}\n          >\n            <Navigation />\n            <div className=\"App__content\">\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/login\" component={Login} />\n                <Route\n                  path=\"/profile/\"\n                  render={() =>\n                    this.state.loggedIn ? <Profile /> : <Redirect to=\"/login\" />\n                  }\n                />\n                <Route component={NoMatch} />\n              </Switch>\n            </div>\n          </LoginContext.Provider>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}